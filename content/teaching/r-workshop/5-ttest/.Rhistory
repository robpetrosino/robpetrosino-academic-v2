install.packages(plotly)
devtools::install_github("ropensci/plotly")
library(plotly)
# Prep the distribution data
x <- seq(-3, 3, 0.005)
y <- dnorm(x)
normal <- as.data.frame(cbind(x,y))
set.seed(42) # ignore this command for now!
# below, the mean and sd values may not be specified since they are the default values
sample <- rnorm(n=5, mean=0, sd=1)
sample <- round(sample, 2)
r1 <- ggplot() +
geom_line(mapping = aes(x, y), data = normal, size = 1.3) +
geom_point(aes(x=sample, y=0))+
geom_label_repel(aes(x=sample, y=0,label=sample))+
scale_x_continuous(n.breaks = 7) +
labs(title = "rnorm(n=5, mean=0, sd=1)", x = NULL, y = NULL) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[1], xend = sample[1],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[2], xend = sample[2],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[3], xend = sample[3],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[4], xend = sample[4],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[5], xend = sample[5],
color = "blue", linetype = 2) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
library(ggplot2)
library(ggrepel)
library(ggfortify)
library(ggthemes)
library(gridExtra)
library(plotly)
r1 <- ggplot() +
geom_line(mapping = aes(x, y), data = normal, size = 1.3) +
geom_point(aes(x=sample, y=0))+
geom_label_repel(aes(x=sample, y=0,label=sample))+
scale_x_continuous(n.breaks = 7) +
labs(title = "rnorm(n=5, mean=0, sd=1)", x = NULL, y = NULL) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[1], xend = sample[1],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[2], xend = sample[2],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[3], xend = sample[3],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[4], xend = sample[4],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[5], xend = sample[5],
color = "blue", linetype = 2) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
plotly(r1)
ggplotly(r1)
plotly_json(r1)
r1 <- ggplot() +
geom_line(mapping = aes(x, y), data = normal, size = 1.3) +
geom_point(aes(x=sample, y=0))+
#geom_label_repel(aes(x=sample, y=0,label=sample))+
scale_x_continuous(n.breaks = 7) +
labs(title = "rnorm(n=5, mean=0, sd=1)", x = NULL, y = NULL) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[1], xend = sample[1],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[2], xend = sample[2],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[3], xend = sample[3],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[4], xend = sample[4],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample[5], xend = sample[5],
color = "blue", linetype = 2) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
r1
plotly_json(r1)
ggplotly(r1)
plotly_json(r1)
ggplotly(r1)
write(plotly_json(r1), "rnorm5.json")
install.packages("listviewer")
library(listviewer)
write(plotly_json(r1), "rnorm5.json")
plotly_json(r1)
write(plotly_json(r1, FALSE), "rnorm5.json")
set.seed(42)
sample2 <- rnorm(5, mean=5, sd=0.5)
sample2 <- round(sample2, 2)
```{r rnorm plot 2, echo=FALSE, message=FALSE}
# rnorm plot
# rnorm(5)
x.5 <- seq(0, 10, 0.005)
y.5 <- dnorm(x.5, mean=5, sd=0.5)
normal.5 <- as.data.frame(cbind(x.5, y.5))
r2 <- ggplot() +
geom_line(mapping = aes(x.5, y.5), data = normal.5, size = 1.3) +
geom_point(aes(x=sample2, y=0))+
geom_label_repel(aes(x=sample2, y=0,label=sample2))+
scale_x_continuous(n.breaks = 7) +
labs(title = "rnorm(n=5, mean=5, sd=0.5)", x = NULL, y = NULL) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[1], xend = sample2[1],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[2], xend = sample2[2],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[3], xend = sample2[3],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[4], xend = sample2[4],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[5], xend = sample2[5],
color = "blue", linetype = 2) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
#plotly_json(r1)
write(plotly_json(r2, FALSE), "r2-norm5.json")
r2 <- ggplot() +
geom_line(mapping = aes(x.5, y.5), data = normal.5, size = 1.3) +
geom_point(aes(x=sample2, y=0))+
#geom_label_repel(aes(x=sample2, y=0,label=sample2))+
scale_x_continuous(n.breaks = 7) +
labs(title = "rnorm(n=5, mean=5, sd=0.5)", x = NULL, y = NULL) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[1], xend = sample2[1],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[2], xend = sample2[2],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[3], xend = sample2[3],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[4], xend = sample2[4],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[5], xend = sample2[5],
color = "blue", linetype = 2) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
r2
r2 <- ggplot() +
geom_line(mapping = aes(x.5, y.5), data = normal.5, size = 1.3) +
geom_point(aes(x=sample2, y=0))+
geom_label_repel(aes(x=sample2, y=0,label=sample2))+
scale_x_continuous(n.breaks = 7) +
labs(title = "rnorm(n=5, mean=5, sd=0.5)", x = NULL, y = NULL) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[1], xend = sample2[1],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[2], xend = sample2[2],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[3], xend = sample2[3],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[4], xend = sample2[4],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.4, x = sample2[5], xend = sample2[5],
color = "blue", linetype = 2) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
r2
r2 <- ggplot() +
geom_line(mapping = aes(x.5, y.5), data = normal.5, size = 1.3) +
geom_point(aes(x=sample2, y=0))+
#geom_label_repel(aes(x=sample2, y=0,label=sample2))+
scale_x_continuous(n.breaks = 7) +
labs(title = "rnorm(n=5, mean=5, sd=0.5)", x = NULL, y = NULL) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[1], xend = sample2[1],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[2], xend = sample2[2],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[3], xend = sample2[3],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[4], xend = sample2[4],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[5], xend = sample2[5],
color = "blue", linetype = 2) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
r2
r2 <- ggplot() +
geom_line(mapping = aes(x.5, y.5), data = normal.5, size = 1.3) +
geom_point(aes(x=sample2, y=0))+
geom_label_repel(aes(x=sample2, y=0,label=sample2))+
scale_x_continuous(n.breaks = 7) +
labs(title = "rnorm(n=5, mean=5, sd=0.5)", x = NULL, y = NULL) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[1], xend = sample2[1],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[2], xend = sample2[2],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[3], xend = sample2[3],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[4], xend = sample2[4],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[5], xend = sample2[5],
color = "blue", linetype = 2) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
r2
r2 <- ggplot() +
geom_line(mapping = aes(x.5, y.5), data = normal.5, size = 1.3) +
geom_point(aes(x=sample2, y=0))+
#geom_label_repel(aes(x=sample2, y=0,label=sample2))+
scale_x_continuous(n.breaks = 7) +
labs(title = "rnorm(n=5, mean=5, sd=0.5)", x = NULL, y = NULL) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[1], xend = sample2[1],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[2], xend = sample2[2],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[3], xend = sample2[3],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[4], xend = sample2[4],
color = "blue", linetype = 2) +
annotate(geom = "segment", y = 0, yend = 0.8, x = sample2[5], xend = sample2[5],
color = "blue", linetype = 2) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
r2
ggplotly(r2)
#plotly_json(r1)
write(plotly_json(r2, FALSE), "r2-norm5.json")
# below, the mean and sd numerical values, and the lower.tail logical value may not be specified since they are the default values
pnorm(q=0, mean=0, sd=1, lower.tail=T)
# pnorm plot 1
# pnorm(0)
x2 <- c(x[1:600], rep(0,601))
y2 <- c(y[1:600], rep(0,601))
p1 <- ggplot(mapping = aes(x, y), data = normal) +
geom_line(size = 1.3) +
geom_vline(xintercept = 0, color = "blue", size = 1.3, linetype = 2) +
scale_x_continuous(n.breaks = 7) +
labs(title = "pnorm(q=0, mean=0, sd=1, lower.tail=T)", x = NULL, y = NULL) +
geom_area(inherit.aes = F, mapping = aes(x=x2, y=y2), fill = "tomato",
alpha = 0.2) +
annotate(geom = "rect", xmin = -2.6, xmax = -2, ymin = 0.12, ymax = 0.18,
alpha = 1, fill = "white", color = "black") +
annotate(geom = "text", label = "0.50", x = -2.3, y = 0.15, size = 6) +
annotate(geom = "segment", x = -2.7, xend = 0, y = 0.01, yend = 0.01,
size = 1.1, arrow = arrow(length = unit(3, "mm"))) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
p1
write(plotly_json(p1, FALSE), "pnorm-1.json")
# below, lower.tail=F will give you the area under the curve on the *left* side of the value of the argument q
pnorm(q=0, mean=0, sd=1, lower.tail=F)
#alternatively, you can just use the formula 1-pnorm()
1-pnorm(q=0, mean=0, sd=1, lower.tail=T)
# pnorm plot 1.2
# 1-pnorm(0)
x9 <- c(rep(0,600), x[601:1201])
y9 <- c(rep(0,600), y[601:1201])
p2 <- ggplot(mapping = aes(x, y), data = normal) +
geom_line(size = 1.3) +
geom_vline(xintercept = 0, color = "blue", size = 1.3, linetype = 2) +
scale_x_continuous(n.breaks = 7) +
labs(title = "pnorm(q=0, mean=0, sd=1, lower.tail=F) \nOR\n 1-pnorm(q=0, mean=0, sd=1, lower.tail=T)", x = NULL, y = NULL) +
geom_area(inherit.aes = F, mapping = aes(x=x9, y=y9), fill = "tomato",
alpha = 0.2) +
annotate(geom = "rect", xmin = 2.6, xmax = 2, ymin = 0.12, ymax = 0.18,
alpha = 1, fill = "white", color = "black") +
annotate(geom = "text", label = "0.50", x = 2.3, y = 0.15, size = 6) +
annotate(geom = "segment", x = 2.7, xend = 0, y = 0.01, yend = 0.01,
size = 1.1, arrow = arrow(length = unit(3, "mm"))) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
p2
write(plotly_json(p2, FALSE), "pnorm-2.json")
# pnorm plot 2
# pnorm(1)
x3 <- c(x[1:801], rep(1,400))
y3 <- c(y[1:801], rep(0,400))
p3 <- ggplot(mapping = aes(x, y), data = normal) +
geom_line(size = 1.3) +
geom_vline(xintercept = 1, color = "blue", size = 1.3, linetype = 2) +
scale_x_continuous(n.breaks = 7) +
labs(title = "pnorm(q=1, mean=0, sd=1, lower.tail=T)", x = NULL, y = NULL) +
geom_area(inherit.aes = F, mapping = aes(x=x3, y=y3), fill = "tomato",
alpha = 0.2) +
annotate(geom = "rect", xmin = -2.6, xmax = -2, ymin = 0.12, ymax = 0.18,
alpha = 1, fill = "white", color = "black") +
annotate(geom = "text", label = "0.84", x = -2.3, y = 0.15, size = 6) +
annotate(geom = "segment", x = -2.7, xend = 1, y = 0.01, yend = 0.01,
size = 1.1, arrow = arrow(length = unit(3, "mm"))) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
p3
write(plotly_json(p3, FALSE), "pnorm-3.json")
pnorm(q=1, mean=0, sd=1, lower.tail=F)
1 - pnorm(q=1, mean=0, sd=1, lower.tail=T)
x4 <- c(x[802:1602], rep(1,400))
y4 <- c(y[802:1602], rep(0,400))
p4 <- ggplot(mapping = aes(x, y), data = normal) +
geom_line(size = 1.3) +
geom_vline(xintercept = 1, color = "blue", size = 1.3, linetype = 2) +
scale_x_continuous(n.breaks = 7) +
labs(title = "pnorm(1, mean=0, sd=1, lower.tail=F) \nOR\n 1 - pnorm(q=1, mean=0, sd=1, lower.tail=T)", x = NULL, y = NULL) +
geom_area(inherit.aes = F, mapping = aes(x=x4, y=y4), fill = "tomato",
alpha = 0.2) +
annotate(geom = "rect", xmin = -2.6, xmax = -2, ymin = 0.12, ymax = 0.18,
alpha = 1, fill = "white", color = "black") +
annotate(geom = "text", label = "0.84", x = -2.3, y = 0.15, size = 6) +
annotate(geom = "segment", x = -2.7, xend = 1, y = 0.01, yend = 0.01,
size = 1.1, arrow = arrow(length = unit(3, "mm"))) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
p4
write(plotly_json(p4, "pnorm-4.json"))
write(plotly_json(p4, FALSE), "pnorm-4.json")
q1 <- ggplot(mapping = aes(x, y), data = normal) +
geom_line(size = 1.3) +
geom_vline(xintercept = 0, color = "blue", size = 1.3, linetype = 2) +
scale_x_continuous(n.breaks = 7) +
labs(title = "qnorm(0.5, mean=0, sd=1, lower.tail=T)", x = NULL, y = NULL) +
geom_area(inherit.aes = F, mapping = aes(x=x2, y=y2), fill = "tomato",
alpha = 0.2) +
annotate(geom = "rect", xmin = -0.25, xmax = 0.25, ymin = 0.03, ymax = 0.09,
alpha = 1, fill = "white", color = "black") +
annotate(geom = "text", label = "0", x = 0, y = 0.06, size = 6) +
annotate(geom = "segment", x = -2.7, xend = 0, y = 0.01, yend = 0.01,
size = 1.1, arrow = arrow(length = unit(3, "mm"))) +
annotate(geom = "text", label = "50%", x = -1.25, y = 0.025, size = 4) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
write(plotly_json(q1, FALSE), "qnorm-1.json")
# qnorm plot 2
# qnorm(0.25)
x5 <- c(x[1:466], rep(-0.6745,735))
y5 <- c(y[1:466], rep(0,735))
q2 <- ggplot(mapping = aes(x, y), data = normal) +
geom_line(size = 1.3) +
geom_vline(xintercept = -0.6745, color = "blue", size = 1.3, linetype = 2) +
scale_x_continuous(n.breaks = 7) +
labs(title = "qnorm(0.25, mean=0, sd=1, lower.tail=T)", x = NULL, y = NULL) +
geom_area(inherit.aes = F, mapping = aes(x=x5, y=y5), fill = "tomato",
alpha = 0.2) +
annotate(geom = "rect", xmin = -0.3, xmax = 0.3, ymin = 0.03, ymax = 0.09,
alpha = 1, fill = "white", color = "black") +
annotate(geom = "text", label = "-0.67", x = 0, y = 0.06, size = 5) +
annotate(geom = "segment", x = -2.7, xend = -0.6745, y = 0.01, yend = 0.01,
size = 1.1, arrow = arrow(length = unit(3, "mm"))) +
annotate(geom = "text", label = "25%", x = -1.65, y = 0.025, size = 4) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
q2
write(plotly_json(q2, FALSE), "qnorm-2.json")
x6 <- c(x[1:345], rep(-1.28,856))
y6 <- c(y[1:345], rep(0,856))
q3 <- ggplot(mapping = aes(x, y), data = normal) +
geom_line(size = 1.3) +
geom_vline(xintercept = -1.28, color = "blue", size = 1.3, linetype = 2) +
scale_x_continuous(n.breaks = 7) +
labs(title = "qnorm(0.1, mean=0, sd=1, lower.tail=T)", x = NULL, y = NULL) +
geom_area(inherit.aes = F, mapping = aes(x=x6, y=y6), fill = "tomato",
alpha = 0.2) +
annotate(geom = "rect", xmin = -0.3, xmax = 0.3, ymin = 0.03, ymax = 0.09,
alpha = 1, fill = "white", color = "black") +
annotate(geom = "text", label = "-1.28", x = 0, y = 0.06, size = 5) +
annotate(geom = "segment", x = -2.7, xend = -1.28, y = 0.01, yend = 0.01,
size = 1.1, arrow = arrow(length = unit(3, "mm"))) +
annotate(geom = "text", label = "10%", x = -1.85, y = 0.025, size = 4) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
q3
write(plotly_json(q3, FALSE), "qnorm-3.json")
x7 <- c(x[1:735], rep(0.6745,466))
y7 <- c(y[1:735], rep(0,466))
q4 <- ggplot(mapping = aes(x, y), data = normal) +
geom_line(size = 1.3) +
geom_vline(xintercept = 0.6745, color = "blue", size = 1.3, linetype = 2) +
scale_x_continuous(n.breaks = 7) +
labs(title = "qnorm(0.75, mean=0, sd=1, lower.tail=T)", x = NULL, y = NULL) +
geom_area(inherit.aes = F, mapping = aes(x=x7, y=y7), fill = "tomato",
alpha = 0.2) +
annotate(geom = "rect", xmin = -0.3, xmax = 0.3, ymin = 0.03, ymax = 0.09,
alpha = 1, fill = "white", color = "black") +
annotate(geom = "text", label = "0.67", x = 0, y = 0.06, size = 5) +
annotate(geom = "segment", x = -2.7, xend = 0.6745, y = 0.01, yend = 0.01,
size = 1.1, arrow = arrow(length = unit(3, "mm"))) +
annotate(geom = "text", label = "75%", x = -.95, y = 0.025, size = 4) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
write(plotly_json(q4, FALSE), "qnorm-4.json")
x8 <- c(x[1:856], rep(1.28,345))
y8 <- c(y[1:856], rep(0,345))
q5 <- ggplot(mapping = aes(x, y), data = normal) +
geom_line(size = 1.3) +
geom_vline(xintercept = 1.28, color = "blue", size = 1.3, linetype = 2) +
scale_x_continuous(n.breaks = 7) +
labs(title = "qnorm(0.9, mean=0, sd=1, lower.tail=T)", x = NULL, y = NULL) +
geom_area(inherit.aes = F, mapping = aes(x=x8, y=y8), fill = "tomato",
alpha = 0.2) +
annotate(geom = "rect", xmin = -0.3, xmax = 0.3, ymin = 0.03, ymax = 0.09,
alpha = 1, fill = "white", color = "black") +
annotate(geom = "text", label = "1.28", x = 0, y = 0.06, size = 5) +
annotate(geom = "segment", x = -2.7, xend = 1.28, y = 0.01, yend = 0.01,
size = 1.1, arrow = arrow(length = unit(3, "mm"))) +
annotate(geom = "text", label = "90%", x = 0.8, y = 0.025,
size = 4) +
theme_classic(base_size = 14, base_family = "Courier") +
theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
q5
write(plotly_json(q5, FALSE), "qnorm-5.json")
